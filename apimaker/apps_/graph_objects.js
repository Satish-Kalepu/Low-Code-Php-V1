const graph_objects =  { data(){ return { s2_ssssssepyt: { "text": "T", "number": "N", "dict": "O", "list": "L", "boolean": "B", "null": "NL" }, s2_snoitca_hparg: ["keywordSearch","listObjects","getObject","getObjectTemplate","getObjectRecords","getObjectNodes","getObjectLibrarySettings","objectCreate","objectCreateWithTemplate","objectLabelUpdate","objectTypeUpdate","objectAliasUpdate","objectInstanceUpdate","objectPropertiesUpdate","objectHtmlUpdate","objectNodesTruncate","objectDelete","objectConverToDataset","objectConverToNode","objectTemplatePropertyCreate","objectTemplatePropertyUpdate","objectTemplatePropertyDelete","objectTemplateEnable","objectTemplateOrderUpdate","dataSetRecordCreate","dataSetRecordUpdate","dataSetRecordDelete","dataSetTruncate"], s2_sdohtem_hparg: { "keywordSearch": { "inputs": { "keyword": {'t':"T", "v": "value", 'types':'T,V'} } }, "listObjects": { "inputs": { "sort": {'t':"T", "v": "ID", 'types':'T,V'}, "order": {'t':"T", "v": "asc", 'types':'T,V'}, "from": {'t':"T", "v": "", 'types':'T,V'}, "last": {'t':"T", "v": "", 'types':'T,V'}, "limit": {'t':"N", "v": 100, 'types':'N'} } }, "getObject": { "inputs": { "object_id": {'t':"T", "v": "T1", 'types':'T,V'} } }, "getObjectTemplate": { "inputs": { "object_id": {'t':"T", "v": "T1", 'types':'T,V'} } }, "getObjectRecords": { "inputs": { "object_id": {'t':"T", "v": "T1", 'types':'T,V'}, "sort": {'t':"T", "v": "_id", 'types':'T,V'}, "order": {'t':"T", "v": "asc", 'types':'T,V'}, "from": {'t':"T", "v": "", 'types':'T,V'}, "last": {'t':"T", "v": "", 'types':'T,V'}, "filter": {'t':"L", "expand":true, "v": [ {'t':"O", "v": { "field":{"t":"KV", "k":"_id","v":"ID", 'types':'KV'}, "ops": {"t":"KV", "k":"=", "v":"=", 'types':'KV'},  "value":{"t":"T", "v":"", 'types':'T,V'} }} ], "template": {'t':"O", "v": { "field":{"t":"KV", "k":"_id","v":"ID", 'types':'KV'}, "ops": {"t":"KV", "k":"=", "v":"=", 'types':'KV'},  "value":{"t":"T", "v":"", 'types':'T,V'} }}} } }, "getObjectNodes": { "inputs": { "instance_id": {'t':"T", "v": "T1", 'types':'T,V'}, "sort": {'t':"T", "v": "id", 'types':'T,V'}, "order": {'t':"T", "v": "asc", 'types':'T,V'}, "from": {'t':"T", "v": "", 'types':'T,V'}, "last": {'t':"T", "v": "", 'types':'T,V'}, "filter": {'t':"L", "expand":true, "v": [ {'t':"O", "v": { "field":{"t":"KV", "k":"_id","v":"ID", 'types':'T,V'},  "ops": {"t":"KV", "k":"=", "v":"=", 'types':'T,V'},  "value":{"t":"T", "v":"", 'types':'T,V'} }} ], "template": {'t':"O", "v": { "field":{"t":"KV", "k":"_id","v":"ID", 'types':'KV'}, "ops": {"t":"KV", "k":"=", "v":"=", 'types':'KV'},  "value":{"t":"T", "v":"", 'types':'T,V'} }}} } }, "getObjectLibrarySettings": { "inputs": { } }, "objectCreate": { "inputs": { "l": {"t":"T", "v":"", 'types':'T,V'}, "i_of": {"t":"GT", "v":"", "i":"", 'types':'T,V,GT'}, "i_t": {"t":"T", "v":"N", 'types':'T,V'}, } }, "objectCreateWithTemplate": { "inputs": { "thing": {"t": "GraphObject", "v":{ "l": {"t": "T","v": "Label"}, "i_of": {"t": "GT","i": "T1","v": "Root"}, "i_t": {"t": "T","v": "N"}, "props": { "p1": [  {"t": "T", "v": ""} ] }, "z_t": { "p1": {  "key": "p1",  "name": {"t": "T", "v": "Description"},  "type": {"t": "KV", "k": "T", "v": "text"},  "m": {"t": "B", "v": "true"} }, "p2": {  "key": "p2",  "name": {"t": "T", "v": "xx"},  "type": {"t": "KV","k": "T","v": "text"},  "m": {"t": "B","v": "false"} } }, "z_o": ["p1","p2"], "z_n": 3 }} } }, "objectLabelUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "label": {"t": "T","v": "", 'types':'T,V'} } }, "objectTypeUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "type": {"t": "T","v": "N", 'types':'T,V'} } }, "objectAliasUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "alias": {'t':"L", "expand":true, "v": [ {"t": "T", "v": "N", 'types':'T,V'} ], "template": {"t": "T", "v": "N", 'types':'T,V'}} } }, "objectInstanceUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "i_of": {"t": "GT", "v": "", "i": "", 'types':'T,V,GT'} } }, "objectPropertiesUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "props": {'t':"O", "expand":true, "v": [ { "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} } ], "template": { "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} }} } }, "objectHtmlUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "body": {'t':"TT", "v": "", 'types':'TT,V'} } }, "objectNodesTruncate": { "inputs": { "instance_id": {'t':"T", "v": "", 'types':'T,V'} } }, "objectDelete": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'} } }, "objectConverToDataset": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "label_to": {'t':"T", "v": "", 'types':'T,V'}, } }, "objectConverToNode": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "primary_field": {'t':"T", "v": "", 'types':'T,V'}, "label_field": {'t':"T", "v": "", 'types':'T,V'}, "alias_field": {'t':"T", "v": "", 'types':'T,V'}, } }, "objectSetIcon": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "ic": {"t":"IC", "v":"", "it": "", 'types':'IC'},    } }, "objectTemplatePropertyCreate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "property": {"t": "T","v": "", 'types':'T,V'}, "template": {'t':"O", "v": { "l": {"t": "T","v": "Description"}, "t": {"t": "KV","v": "Text","k": "T"}, "m": {"t": "B","v": "false"} }} } }, "objectTemplatePropertyUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "property": {"t": "T","v": "", 'types':'T,V'}, "config": {'t':"O", "v": { "l": {"t": "T", "v": "Description", 'types':'T,V'}, "t": {"t": "KV", "v": "Text", "k": "T"}, "m": {"t": "B", "v": "false"} }} } }, "objectTemplatePropertyDelete": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "property": {"t": "T","v": "", 'types':'T,V'}, } }, "objectTemplateEnable": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'} } }, "objectTemplateOrderUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "order": {'t':"L", "expand":true, "v": [ {'t':"T","v":"p1"}, {'t':"T","v":"p2"} ], 'types':'L,V', "template": {'t':"T","v":"p1"}} } }, "dataSetRecordCreate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "record_id": {'t':"T", "v": "", 'types':'T,V'}, "properties": {'t':"O", "expand":true, "v": [ { "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} } ], "template": { "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} }} } }, "dataSetRecordUpdate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "record_id": {'t':"T", "v": "", 'types':'T,V'}, "properties": {'t':"O", "expand":true, "v": [ { "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} } ], "template":{ "key": {'t':"T", "v":"p1"}, "value": {'t':"L", "v": [  {"t": "T","v": "", 'types':'T,V'} ]} }}, "method": {'t':"T", "v": "Replace"} } }, "dataSetRecordDelete": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'}, "record_id": {'t':"T", "v": "", 'types':'T,V'} } }, "dataSetTruncate": { "inputs": { "object_id": {'t':"T", "v": "", 'types':'T,V'} } } } } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ if( 'stage' in this.v['data'] ){ if( this.v['data']['stage'] == "initiate" ){ this.v['data'] = { "db":{"th":"GraphDB", "i":{"t":"T","v":""}, "l":{"t":"T","v":""} }, "action":{"t":"T","v":""}, "inputs":{"t":"O", "v":{}}, "output":{"t":"T", "v":"dbResult"}, "struct_":{'t':'O','v':{ 'status': {"t":"T", "v":"success"}, 'error': {"t":"T", "v":""}, 'data': {"t":"O", "v":{}} }}, }; delete( this.v['data']['stage'] );  } } }, s2_eulav_evired: function( v ){ if( v['t'] == "T" || v['t'] == "TT" ||  v['t'] == "HT" || v['t']== "D" ){ return v['v'].toString(); }else if( v['t']== "N" ){ return Number(v['v']); }else if( v['t'] == 'O' ){ return this.s2_noitaton_tcejbo_teg(v['v']); }else if( v['t'] == 'L' ){ return this.s2_noitaton_tsil_teg(v['v']); }else if( v['t'] == 'NL' ){ return null; }else if( v['t'] == 'B' ){ return (v['v']=="true"||v['v']===true?true:false); }else if( v['t'] == 'DT' ){ return (v['v']['v'] + " " + v['v']['tz']).toString(); }else if( v['t'] == 'D' || v['t'] == 'TS' ){ return (v['v']).toString(); }else if( v['t'] == 'D' || v['t'] == 'DT' || v['t'] == 'TS' ){ return (v['v']).toString(); }else{ return "unknown: "+ v['t']; } }, s2_kkkcabllac: function( c ){ if( c == "s2_ttceles_bd" ){  }else if( c == "s2_tceles_noitca" ){ var i = []; var a = this.v['data']['action']['v']+''; if( a in this.s2_sdohtem_hparg ){ if( 'inputs' in this.s2_sdohtem_hparg[ a ] ){ i = this.s2_sdohtem_hparg[ a ]['inputs']; } } this.v['data']['inputs']['v'] = i; }else{ console.log("Callback: " + c + " not defined!"); } }, get_types: function( vd ){ if( typeof(vd) == "object" ){ if( 'types' in vd ){ return vd['types']; } } return vd['t']; }, s2_ereht_stupni_si: function(){ if( 'inputs' in this.v['data'] ){ if( typeof(this.v['data']['inputs']['v']) =="object" ){ if( 'length' in this.v['data']['inputs']['v'] == false ){ if( Object.keys(this.v['data']['inputs']['v']).length > 0 ){ return true; }else{ console.log( 3 ); } }else{ console.log( 2 ); } }else{ console.log( 5 ); } }else{ console.log( 1 ); } return false; }, add_input_value_key: function(vi){ var vn = prompt("New Key?"); var vt = JSON.parse(JSON.stringify(this.v['data']['inputs']['v'][ vi ]['template'])); vt['key']['v'] = vn; this.v['data']['inputs']['v'][ vi ]['v'].push( vt ); }, add_input_value_item: function(vi){ var vt = JSON.parse(JSON.stringify(this.v['data']['inputs']['v'][ vi ]['template'])); this.v['data']['inputs']['v'][ vi ]['v'].push( vt ); } }, template: `<div style="border-left:1px solid orange; padding-left:10px;" > <template v-if="'db' in v['data']" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Database</div> <div title="Database" data-type="dropdown" data-list="thing" data-thing="GraphDB" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:db'" v-bind:data-context-callback="refname+':s2_ttceles_bd'"   >{{ v['data']['db']['l']['v'] }}</div> </div> <template v-if="v['data']['db']['l']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Action</div> <div title="Action" data-type="dropdown" data-list="list" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:action:v'" v-bind:data-list-values="s2_snoitca_hparg" v-bind:data-context-callback="refname+':s2_tceles_noitca'"   >{{ v['data']['action']['v'] }}</div> </div> <template v-if="s2_ereht_stupni_si()" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Inputs</div> <div> <div v-for="vd,vi in v['data']['inputs']['v']" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:50px;">{{ vi }}</div> <div v-if="'expand' in vd&&vd['t']=='O'" >  <div v-for="vd_d,vi_i in vd['v']" style="display:flex; column-gap:10px; margin-bottom:5px;" >  <div class="btn btn-outline-danger btn-sm py-0" >X</div>  <div style="min-width:50px;">{{ vd_d['key']['v'] }}</div>  <inputtextbox2 v-bind:datafor="datafor" v-bind:v="vd_d['value']" v-bind:types="get_types(vd_d['value'])" v-bind:datavar="datavar+':data:inputs:v:'+vi+':v:'+vi_i+':value'" v-bind:vars="vars"></inputtextbox2>  </div>  <div class="btn btn-outline-dark btn-sm py-0 mb-2" v-on:click="add_input_value_key(vi)" >+</div> </div> <div v-else-if="'expand' in vd&&vd['t']=='L'" >  <ul>  <li v-for="vd_d,vi_i in vd['v']" >  <div style="display:flex; column-gap:10px; mb-2" >  <div class="btn btn-outline-danger btn-sm py-0" >X</div>  <inputtextbox2 v-bind:datafor="datafor" v-bind:v="vd_d" v-bind:types="get_types(vd_d)" v-bind:datavar="datavar+':data:inputs:v:'+vi+':v:'+vi_i" v-bind:vars="vars"></inputtextbox2>  </div>  </li>  <li>  <div class="btn btn-outline-dark btn-sm py-0 mb-2" v-on:click="add_input_value_item(vi)" >+</div>  </li>  </ul> </div> <inputtextbox2 v-else v-bind:datafor="datafor" v-bind:v="v['data']['inputs']['v'][vi]" v-bind:types="get_types(vd)" v-bind:datavar="datavar+':data:inputs:v:'+vi" v-bind:vars="vars"></inputtextbox2> </div> </div> </div> </template> <pre>{{ v['data']['inputs'] }}</pre> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Output</div> <div title="Output Variable" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'"><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'" data-allow="T" >{{ v['data']['output']['v'] }}</div></div> </div> </template> </template> </div>` };