const bgtask = { data(){ return { } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ if( typeof(this.v) != "object" ){ this.v = []; }else if( "length" in this.v == false ){ this.v = []; } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, s2_kkkcabllac: function( c ){ this.s2_ooooooohce( "s2_kkkcabllac: "+ c ); var x = c.split(/\:/g); if( x[0] == "s2_tes_amehcs" ){ if( this.v['function']['v']['inputs'] == null ){ this.v['inputs']['v'] = {}; }else if( typeof(this.v['function']['v']['inputs']) == "object" ){ if( "length" in this.v['function']['v']['inputs'] == false ){ this.v['inputs']['v'] = this.v['function']['v']['inputs']; }else{ this.v['inputs']['v'] = {}; } }else{ this.v['inputs']['v'] = {}; } }else{ console.log("Callback: " + c + " not defined!"); } }, is_input: function(){ if( this.v['inputs'] == null ){ return false; } if( typeof(this.v['inputs']) == "object" ){ if( "v" in this.v['inputs'] ){ if( typeof(this.v['inputs']['v']) == "object" ){ if( "length" in this.v['inputs']['v'] == false ){ if( Object.keys(this.v['inputs']['v']).length > 0 ){ return true; } } } } } return false; } }, template: `<div> <div style="display:flex; column-gap:5px;"> <div style="width:60px; text-align: right;">Function</div> <div title="Function" data-type="dropdown" data-list="thing" data-thing="FunctionEngine" v-bind:data-context-callback="refname+':s2_tes_amehcs'"  v-bind:data-for="datafor" v-bind:data-var="datavar+':function:v'" >{{ v['function']['v']['l']['v'] }}</div> </div> <div style="display:flex; column-gap:5px;" v-if="is_input()"> <div style="width:60px; text-align: right;">Inputs</div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['inputs']" types="O"  v-bind:datavar="datavar+':inputs'" v-bind:vars="vars" ></inputtextbox2> </div> <div style="display:flex; column-gap:5px;"> <div style="width:60px; text-align: right;">Result</div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['output']" types="T" v-bind:datavar="datavar+':output'" v-bind:vars="vars" ></inputtextbox2> </div> </div>` };